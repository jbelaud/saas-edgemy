// @ts-nocheck
import { PrismaClient } from '@prisma/client';
import { randomBytes } from 'crypto';
import { hashSync } from '@node-rs/bcrypt';

const prisma = new PrismaClient();

// Fonction pour g√©n√©rer un ID unique
function generateId() {
  return randomBytes(16).toString('hex');
}

// Fonction pour hasher un mot de passe (compatible Better Auth)
function hashPassword(password: string): string {
  return hashSync(password, 10);
}

async function main() {
  console.log('üå± D√©marrage du seed...');

  // 1. Cr√©er les utilisateurs de base
  console.log('üë§ Cr√©ation des utilisateurs...');

  // Coach actif avec profil complet
  const coachActiveUser = await prisma.user.upsert({
    where: { email: 'coach-actif@edgemy.fr' },
    update: { updatedAt: new Date() },
    create: {
      id: generateId(),
      email: 'coach-actif@edgemy.fr',
      name: 'Jean Dupont',
      emailVerified: true,
      image: 'https://api.dicebear.com/7.x/avataaars/svg?seed=jean',
      updatedAt: new Date(),
    },
  });

  // Coach inactif (abonnement expir√©)
  const coachInactiveUser = await prisma.user.upsert({
    where: { email: 'coach-inactif@edgemy.fr' },
    update: { updatedAt: new Date() },
    create: {
      id: generateId(),
      email: 'coach-inactif@edgemy.fr',
      name: 'Marie Martin',
      emailVerified: true,
      image: 'https://api.dicebear.com/7.x/avataaars/svg?seed=marie',
      updatedAt: new Date(),
    },
  });

  // Coach en attente de validation
  const coachPendingUser = await prisma.user.upsert({
    where: { email: 'coach-pending@edgemy.fr' },
    update: { updatedAt: new Date() },
    create: {
      id: generateId(),
      email: 'coach-pending@edgemy.fr',
      name: 'Pierre Durand',
      emailVerified: true,
      image: 'https://api.dicebear.com/7.x/avataaars/svg?seed=pierre',
      updatedAt: new Date(),
    },
  });

  // Joueur simple
  const playerUser = await prisma.user.upsert({
    where: { email: 'joueur@edgemy.fr' },
    update: { updatedAt: new Date() },
    create: {
      id: generateId(),
      email: 'joueur@edgemy.fr',
      name: 'Sophie Bernard',
      emailVerified: true,
      image: 'https://api.dicebear.com/7.x/avataaars/svg?seed=sophie',
      updatedAt: new Date(),
    },
  });

  console.log('‚úÖ Utilisateurs cr√©√©s');

  // 1.5. Cr√©er les comptes d'authentification (Better Auth)
  console.log('üîê Cr√©ation des comptes d\'authentification...');
  
  // Hash le mot de passe pour chaque compte (chaque hash sera unique gr√¢ce au salt)
  await prisma.account.upsert({
    where: {
      providerId_accountId: {
        providerId: 'credential',
        accountId: coachActiveUser.id,
      },
    },
    update: {},
    create: {
      id: generateId(),
      userId: coachActiveUser.id,
      accountId: coachActiveUser.id,
      providerId: 'credential',
      password: hashPassword('Password123!'),
      updatedAt: new Date(),
    },
  });

  await prisma.account.upsert({
    where: {
      providerId_accountId: {
        providerId: 'credential',
        accountId: coachInactiveUser.id,
      },
    },
    update: {},
    create: {
      id: generateId(),
      userId: coachInactiveUser.id,
      accountId: coachInactiveUser.id,
      providerId: 'credential',
      password: hashPassword('Password123!'),
      updatedAt: new Date(),
    },
  });

  await prisma.account.upsert({
    where: {
      providerId_accountId: {
        providerId: 'credential',
        accountId: coachPendingUser.id,
      },
    },
    update: {},
    create: {
      id: generateId(),
      userId: coachPendingUser.id,
      accountId: coachPendingUser.id,
      providerId: 'credential',
      password: hashPassword('Password123!'),
      updatedAt: new Date(),
    },
  });

  await prisma.account.upsert({
    where: {
      providerId_accountId: {
        providerId: 'credential',
        accountId: playerUser.id,
      },
    },
    update: {},
    create: {
      id: generateId(),
      userId: playerUser.id,
      accountId: playerUser.id,
      providerId: 'credential',
      password: hashPassword('Password123!'),
      updatedAt: new Date(),
    },
  });

  console.log('‚úÖ Comptes d\'authentification cr√©√©s');
  console.log('   üìù Mot de passe par d√©faut : Password123!');

  // 2. Cr√©er les profils coach
  console.log('üéì Cr√©ation des profils coach...');

  // Coach actif - Profil complet
  const coachActive = await prisma.coach.upsert({
    where: { userId: coachActiveUser.id },
    update: {},
    create: {
      userId: coachActiveUser.id,
      slug: 'jean-dupont',
      firstName: 'Jean',
      lastName: 'Dupont',
      bio: `Joueur professionnel de poker depuis 10 ans, sp√©cialis√© en MTT et Cash Game. 
      
J'ai remport√© plusieurs tournois majeurs dont un bracelet WSOP et je partage maintenant mon exp√©rience avec les joueurs qui souhaitent progresser.

Ma m√©thode se base sur l'analyse d√©taill√©e de vos mains, le travail sur les leaks et l'optimisation de votre strat√©gie selon votre niveau et vos objectifs.`,
      avatarUrl: 'https://api.dicebear.com/7.x/avataaars/svg?seed=jean',
      bannerUrl: 'https://images.unsplash.com/photo-1511193311914-0346f16efe90?w=1200&h=400&fit=crop',
      status: 'ACTIVE',
      formats: ['MTT', 'CASH', 'GTO'],
      stakes: 'NL100-NL500',
      roi: 18.5,
      experience: 10,
      languages: ['fr', 'en'],
      twitchUrl: 'https://twitch.tv/jeandupont',
      youtubeUrl: 'https://youtube.com/@jeandupont',
      twitterUrl: 'https://twitter.com/jeandupont',
      stripeAccountId: 'acct_test_active',
      subscriptionId: 'sub_test_active',
      badges: ['WSOP_BRACELET', 'EPT_WINNER'],
    },
  });

  // Coach inactif - Abonnement expir√©
  const coachInactive = await prisma.coach.upsert({
    where: { userId: coachInactiveUser.id },
    update: {},
    create: {
      userId: coachInactiveUser.id,
      slug: 'marie-martin',
      firstName: 'Marie',
      lastName: 'Martin',
      bio: 'Sp√©cialiste Spin & Go et MTT low stakes. Ancienne joueuse professionnelle.',
      avatarUrl: 'https://api.dicebear.com/7.x/avataaars/svg?seed=marie',
      status: 'INACTIVE', // Abonnement expir√©
      formats: ['SPIN', 'MTT'],
      stakes: 'NL10-NL50',
      roi: 12.0,
      experience: 5,
      languages: ['fr'],
      stripeAccountId: 'acct_test_inactive',
      subscriptionId: null, // Pas d'abonnement actif
    },
  });

  // Coach en attente de validation
  const coachPending = await prisma.coach.upsert({
    where: { userId: coachPendingUser.id },
    update: {},
    create: {
      userId: coachPendingUser.id,
      slug: 'pierre-durand',
      firstName: 'Pierre',
      lastName: 'Durand',
      bio: 'Coach mental game et strat√©gie avanc√©e. Expert en psychologie du poker.',
      avatarUrl: 'https://api.dicebear.com/7.x/avataaars/svg?seed=pierre',
      status: 'PENDING_REVIEW', // En attente de validation
      formats: ['MENTAL', 'GTO'],
      stakes: 'NL50-NL200',
      experience: 7,
      languages: ['fr', 'en', 'de'],
      stripeAccountId: 'acct_test_pending',
      subscriptionId: 'sub_test_pending',
    },
  });

  console.log('‚úÖ Profils coach cr√©√©s');

  // 3. Cr√©er les annonces pour le coach actif
  console.log('üì¢ Cr√©ation des annonces...');

  await prisma.announcement.createMany({
    data: [
      {
        coachId: coachActive.id,
        title: 'Coaching MTT - D√©butant',
        slug: 'coaching-mtt-debutant-jean-dupont',
        description: 'Session de coaching pour d√©butants en MTT. Nous travaillerons sur les bases : s√©lection de mains, gestion de bankroll, et strat√©gie de tournoi.',
        priceCents: 5000, // 50‚Ç¨
        durationMin: 60,
        format: 'MTT',
        isActive: true,
      },
      {
        coachId: coachActive.id,
        title: 'Coaching Cash Game NL100-NL200',
        slug: 'coaching-cash-game-nl100-nl200-jean-dupont',
        description: 'Analyse de vos sessions de cash game, d√©tection des leaks, et optimisation de votre strat√©gie pour les limites NL100-NL200.',
        priceCents: 8000, // 80‚Ç¨
        durationMin: 90,
        format: 'CASH',
        isActive: true,
      },
      {
        coachId: coachActive.id,
        title: 'Pack 5 sessions - Progression MTT',
        slug: 'pack-5-sessions-progression-mtt-jean-dupont',
        description: 'Pack de 5 sessions pour une progression compl√®te en MTT. Suivi personnalis√© entre les sessions et plan de travail adapt√©.',
        priceCents: 20000, // 200‚Ç¨ (au lieu de 250‚Ç¨)
        durationMin: 60,
        format: 'MTT',
        isActive: true,
      },
      {
        coachId: coachActive.id,
        title: 'Analyse de main GTO',
        slug: 'analyse-de-main-gto-jean-dupont',
        description: 'Session courte d\'analyse approfondie d\'une main complexe avec approche GTO. Parfait pour comprendre les spots difficiles.',
        priceCents: 3000, // 30‚Ç¨
        durationMin: 30,
        format: 'GTO',
        isActive: false, // Annonce d√©sactiv√©e
      },
    ],
  });

  // Annonces pour le coach inactif (ne seront pas visibles)
  await prisma.announcement.create({
    data: {
      coachId: coachInactive.id,
      title: 'Coaching Spin & Go',
      slug: 'coaching-spin-go-marie-martin',
      description: 'Session de coaching Spin & Go pour tous niveaux.',
      priceCents: 4000,
      durationMin: 60,
      format: 'SPIN',
      isActive: true,
    },
  });

  console.log('‚úÖ Annonces cr√©√©es');

  // 4. Cr√©er un profil joueur
  console.log('üéÆ Cr√©ation du profil joueur...');

  await prisma.player.upsert({
    where: { userId: playerUser.id },
    update: {},
    create: {
      id: generateId(),
      userId: playerUser.id,
      formats: ['MTT', 'CASH'],
      goals: 'Am√©liorer mon jeu en MTT et atteindre les limites NL100',
    },
  });

  console.log('‚úÖ Profil joueur cr√©√©');

  // 5. Cr√©er quelques r√©servations de test
  console.log('üìÖ Cr√©ation des r√©servations...');

  const announcements = await prisma.announcement.findMany({
    where: { coachId: coachActive.id, isActive: true },
    take: 2,
  });

  if (announcements.length > 0) {
    const futureDate = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000);
    const pastDate = new Date(Date.now() - 3 * 24 * 60 * 60 * 1000);
    
    await prisma.reservation.createMany({
      data: [
        {
          playerId: playerUser.id,
          coachId: coachActive.id,
          announcementId: announcements[0].id,
          startDate: futureDate,
          endDate: new Date(futureDate.getTime() + 60 * 60 * 1000), // +1h
          priceCents: 5000,
          status: 'CONFIRMED',
        },
        {
          playerId: playerUser.id,
          coachId: coachActive.id,
          announcementId: announcements[1].id,
          startDate: pastDate,
          endDate: new Date(pastDate.getTime() + 90 * 60 * 1000), // +1h30
          priceCents: 8000,
          status: 'COMPLETED',
        },
      ],
    });
  }

  console.log('‚úÖ R√©servations cr√©√©es');

  // 6. Afficher le r√©sum√©
  console.log('\nüìä R√âSUM√â DU SEED\n');
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
  console.log('\nüîê COMPTES DE TEST (mot de passe: password123)\n');
  console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê');
  console.log('‚îÇ üü¢ COACH ACTIF                                          ‚îÇ');
  console.log('‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§');
  console.log('‚îÇ Email    : coach-actif@edgemy.fr                        ‚îÇ');
  console.log('‚îÇ Nom      : Jean Dupont                                  ‚îÇ');
  console.log('‚îÇ Slug     : jean-dupont                                  ‚îÇ');
  console.log('‚îÇ Status   : ACTIVE ‚úÖ                                     ‚îÇ');
  console.log('‚îÇ Annonces : 4 (3 actives)                                ‚îÇ');
  console.log('‚îÇ URL      : /coach/jean-dupont                           ‚îÇ');
  console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n');

  console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê');
  console.log('‚îÇ üî¥ COACH INACTIF                                        ‚îÇ');
  console.log('‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§');
  console.log('‚îÇ Email    : coach-inactif@edgemy.fr                      ‚îÇ');
  console.log('‚îÇ Nom      : Marie Martin                                 ‚îÇ');
  console.log('‚îÇ Slug     : marie-martin                                 ‚îÇ');
  console.log('‚îÇ Status   : INACTIVE ‚ùå (abonnement expir√©)              ‚îÇ');
  console.log('‚îÇ Annonces : 1 (non visible publiquement)                 ‚îÇ');
  console.log('‚îÇ URL      : /coach/marie-martin (inactif)                    ‚îÇ');
  console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n');

  console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê');
  console.log('‚îÇ üü° COACH EN VALIDATION                                  ‚îÇ');
  console.log('‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§');
  console.log('‚îÇ Email    : coach-pending@edgemy.fr                      ‚îÇ');
  console.log('‚îÇ Nom      : Pierre Durand                                ‚îÇ');
  console.log('‚îÇ Slug     : pierre-durand                                ‚îÇ');
  console.log('‚îÇ Status   : PENDING_REVIEW ‚è≥                            ‚îÇ');
  console.log('‚îÇ Annonces : 0                                            ‚îÇ');
  console.log('‚îÇ URL      : /coach/pierre-durand (404)                   ‚îÇ');
  console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n');

  console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê');
  console.log('‚îÇ üéÆ JOUEUR                                               ‚îÇ');
  console.log('‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§');
  console.log('‚îÇ Email    : joueur@edgemy.fr                             ‚îÇ');
  console.log('‚îÇ Nom      : Sophie Bernard                               ‚îÇ');
  console.log('‚îÇ Niveau   : INTERMEDIATE                                 ‚îÇ');
  console.log('‚îÇ Format   : MTT                                          ‚îÇ');
  console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n');

  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
  console.log('\nüß™ SC√âNARIOS DE TEST\n');
  console.log('1. Connexion coach actif ‚Üí Dashboard accessible');
  console.log('2. Connexion coach inactif ‚Üí Alert abonnement expir√©');
  console.log('3. Connexion coach pending ‚Üí Alert validation en cours');
  console.log('4. Page publique jean-dupont ‚Üí Visible avec 3 annonces');
  console.log('5. Page publique marie-martin ‚Üí Visible (inactif)');
  console.log('6. Connexion joueur ‚Üí Peut r√©server avec Jean Dupont');
  console.log('\n‚úÖ Seed termin√© avec succ√®s!\n');
}

main()
  .catch((e) => {
    console.error('‚ùå Erreur lors du seed:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
