generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Subscriber {
  id        String       @id @default(cuid())
  email     String       @unique
  role      WaitlistRole
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  firstName String?

  @@map("subscribers")
}

model account {
  id                    String    @id
  userId                String
  accountId             String
  providerId            String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime
  user                  user      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([providerId, accountId])
}

model coach {
  id          String   @id
  userId      String   @unique
  bio         String?
  hourlyRate  Float?
  specialties String[]
  experience  Int?
  user        user     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model player {
  id       String   @id
  userId   String   @unique
  abi      Float?
  formats  String[]
  goals    String?
  winnings Float?
  user     user     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model session {
  id        String   @id
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      user     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model user {
  id            String    @id
  email         String?   @unique
  emailVerified Boolean   @default(false)
  name          String?
  image         String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime
  account       account[]
  coach         coach?
  player        player?
  session       session[]
}

model verification {
  id         String   @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime

  @@unique([identifier, value])
}

enum Role {
  USER
  PLAYER
  COACH
  ADMIN
}

enum WaitlistRole {
  PLAYER
  COACH
  ADMIN
}
