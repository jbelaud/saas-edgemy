// Script pour tester l'authentification Better Auth
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
  console.log('üîç V√©rification des comptes dans la base de donn√©es...\n');

  // V√©rifier les utilisateurs
  const users = await prisma.user.findMany({
    where: {
      email: {
        in: [
          'coach-actif@edgemy.fr',
          'coach-inactif@edgemy.fr',
          'coach-pending@edgemy.fr',
          'joueur@edgemy.fr',
        ],
      },
    },
    select: {
      id: true,
      email: true,
      name: true,
      emailVerified: true,
    },
  });

  console.log('üë§ Utilisateurs trouv√©s:', users.length);
  users.forEach((user) => {
    console.log(`  - ${user.email} (${user.name}) - V√©rifi√©: ${user.emailVerified}`);
  });

  // V√©rifier les comptes d'authentification
  const accounts = await prisma.account.findMany({
    where: {
      user: {
        email: {
          in: [
            'coach-actif@edgemy.fr',
            'coach-inactif@edgemy.fr',
            'coach-pending@edgemy.fr',
            'joueur@edgemy.fr',
          ],
        },
      },
    },
    select: {
      id: true,
      userId: true,
      providerId: true,
      password: true,
      user: {
        select: {
          email: true,
        },
      },
    },
  });

  console.log('\nüîê Comptes d\'authentification trouv√©s:', accounts.length);
  accounts.forEach((account) => {
    console.log(`  - ${account.user.email}`);
    console.log(`    Provider: ${account.providerId}`);
    console.log(`    Password hash: ${account.password?.substring(0, 20)}...`);
  });

  if (accounts.length === 0) {
    console.log('\n‚ùå PROBL√àME: Aucun compte d\'authentification trouv√©!');
    console.log('   Relancez le seed: pnpm db:seed:safe');
  } else if (accounts.length < 4) {
    console.log('\n‚ö†Ô∏è  ATTENTION: Seulement', accounts.length, 'comptes trouv√©s (attendu: 4)');
  } else {
    console.log('\n‚úÖ Tous les comptes sont pr√©sents!');
  }
}

main()
  .catch((e) => {
    console.error('‚ùå Erreur:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
